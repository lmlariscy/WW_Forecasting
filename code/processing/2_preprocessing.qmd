---
title: "Pre-processing"
author: "Leah Lariscy"
date: "2023-09-15"
format: html
editor: visual
toc: true
toc-depth: 4
df-print: paged
code-overflow: wrap
---

## Info

This pre-processing script does the following:

-   WBE technical replicates are averaged

-   Viral load is summed across WWTPs per date per target

-   Viral load is averaged across targets (N1 and N2) per date

-   WW qPCR assay detection frequency is calculated

-   7 day moving average is calculated for all variables of interest

-   WBE and COVID data are combined and weekly averages are calculated

-   Hospitalization data will also be added in the future

## Load packages

```{r,echo=FALSE}
knitr::opts_chunk$set(message=F)
```

```{r,message=FALSE,echo=FALSE}
library(tidyverse)
library(here)
library(fpp3)
library(skimr)
library(ggpubr)
```

## Load data

```{r}
#WBE file from processing script
wbe <- read_rds(here("data/processed_data/qpcr_plant_all.rds"))
wbe_na40 <- read_rds(here("data/processed_data/qpcr_plant_all_NA40.rds"))
wbe_na42 <- read_rds(here("data/processed_data/qpcr_plant_all_NA42.rds"))

#COVID file from processing script
covid <- read_rds(here("data/processed_data/all_covid_combined.rds"))

#Hospitalization data from processing script
hospital <- read_rds(here("data/processed_data/athens_hospitalizations.rds"))

#Load qPCR file with ct NAs from processing script
qpcr_na <- read_rds(here("data/processed_data/qpcr_na.rds"))
```

## A) WBE Wrangling

### 1. More cleaning on VL data

```{r}
#Remove observations when Cts = NA, this means that collection is missing or not part of the surveillance study
wbe <- wbe %>% na.omit(ct)

#Check for NAs in the rest of the data
skim(wbe) #yay nothing is missing

#Count observations for each date/facility/target/collection
wbe_count <- wbe %>% count(date,facility,target,collection_num) #max is either 9 or 18
head(wbe_count, n = 10)
```

### 2. Average VL technical reps 

This will be used to subset data by n number of biological replicates

```{r}
wbe_vl_avg <- wbe %>% 
  group_by(date,facility,target,biological_replicate) %>% 
  summarize(avg_viral_load = mean(viral_load)) %>% 
  ungroup()
```

#### 2.1 Subset bio reps & summarize

```{r}
# n = 6
vl_avg_n6 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=6) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))

#n = 5
vl_avg_n5 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=5) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))

#n = 4
vl_avg_n4 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=4) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))

#n = 3
vl_avg_n3 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=3) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))

#n = 2
vl_avg_n2 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=2) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))

#n = 1
vl_avg_n1 <- wbe_vl_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=1) %>% 
  summarize(avg_viral_load = mean(avg_viral_load))
```

### 3. Average AP technical reps

```{r}
wbe_ap_avg <- qpcr_na %>% 
  mutate(facility = as.factor(facility), #code each facility as a factor
         facility = recode(facility, NO = "A", MI = "B", CC = "C"), 
         #de-identify treatment facility
         facility = ordered(facility, levels = c("A", "B", "C"))) %>% 
  filter(between(date, as.Date("2020-06-30"), as.Date("2023-01-04"))) %>% 
        select(!collection_num) %>% 
        group_by(date,facility,target,biological_replicate) %>% 
        summarize(n = n(), 
                  n_miss = sum(is.na(ct)),
                  n_pos = n-n_miss) %>% 
        ungroup()
```

#### 3.1 Subset bio reps & summarize

```{r}
# n = 6
ap_avg_n6 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=6) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)

# n = 5
ap_avg_n5 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=5) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)

# n = 4
ap_avg_n4 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=4) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)

# n = 3
ap_avg_n3 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=3) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)

# n = 2
ap_avg_n2 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=2) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)

# n = 1
ap_avg_n1 <- wbe_ap_avg %>% 
  group_by(date,facility,target) %>% 
  slice_sample(n=1) %>% 
  summarize(n = sum(n), 
            n_miss = sum(n_miss),
            n_pos = n-n_miss) %>% 
  ungroup() %>% 
  select(!n_miss)
```

### 4. PIVOT! (widen avg viral load data)

Then, summarize by week (average viral load)

VL data ready to be combined with AP data

```{r}
vl_daily_wide <- wbe_avg %>% select(c(date,avg_viral_load,facility,target)) %>% 
pivot_wider(names_from = c(facility,target),
            values_from = c(avg_viral_load),
            names_sep = "_") %>% 
mutate(date = as_date(date),
       week = yearweek(date))
```

```{r}
# n = 6
vl_n6_week <- vl_avg_n6 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)

# n = 5
vl_n5_week <- vl_avg_n5 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)

# n = 4
vl_n4_week <- vl_avg_n4 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)

# n = 3
vl_n3_week <- vl_avg_n3 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)

# n = 2
vl_n2_week <- vl_avg_n2 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)

# n = 1
vl_n1_week <- vl_avg_n1 %>% 
  select(c(date,avg_viral_load,facility,target)) %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(avg_viral_load),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:7), mean, ra.rm = F)
```

### 5. PIVOT! (widen qpcr pos data)

AP data ready to be combined with VL data

```{r}
# n = 6
ap_n6_week <- ap_avg_n6 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)

# n = 5
ap_n5_week <- ap_avg_n5 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)

# n = 4
ap_n4_week <- ap_avg_n4 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)

# n = 3
ap_n3_week <- ap_avg_n3 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)

# n = 2
ap_n2_week <- ap_avg_n2 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)

# n = 1
ap_n1_week <- ap_avg_n1 %>% 
  pivot_wider(names_from = c(facility,target),
              values_from = c(n, n_pos),
              names_sep = "_") %>% 
  mutate(date = as_date(date), 
         week = yearweek(date)) %>% 
  group_by(week) %>% 
  summarise_at(vars(2:13), sum, ra.rm = F)
```

### 5. Combine VL and AP data

WBE data ready to be combined with COVID data

```{r}
wbe_n6_week <- left_join(ap_n6_week,vl_n6_week, by = "week") #n=6

wbe_n5_week <- left_join(ap_n5_week,vl_n5_week, by = "week") #n=5

wbe_n4_week <- left_join(ap_n4_week,vl_n4_week, by = "week") #n=4

wbe_n3_week <- left_join(ap_n3_week,vl_n3_week, by = "week") #n=3

wbe_n2_week <- left_join(ap_n2_week,vl_n2_week, by = "week") #n=2

wbe_n1_week <- left_join(ap_n1_week,vl_n1_week, by = "week") #n=1
```

## B) COVID Wrangling

### 1. Subset COVID dates, summarize by week

```{r}
covid_daily <- covid %>% 
  filter(between(date, as.Date("2020-06-30"), as.Date("2023-01-04"))) %>%  #filter for surveillance time series
  mutate(date = as_date(date),
         week = yearweek(date))

covid_weekly <- covid_daily %>% 
  select(!c(cases.symptom.onset,cases.reported,
            pcr_pos_7dma,pcr_pos_14dma,prop_pos,date)) %>% 
  #select only week, pcr test, and pcr pos
  group_by(week) %>% 
  summarise_at(vars(1:2),sum,na.rm = F) %>% 
  #sum tests and positives by week
  ungroup()
```

### 2. Combine WBE data with COVID data

```{r}
# n = 6
wbe_covid_n6_week <- left_join(wbe_n6_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n6_week,
        here("data/processed_data/wbe_covid_n6_week.rds"))

# n = 5
wbe_covid_n5_week <- left_join(wbe_n5_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n5_week,
        here("data/processed_data/wbe_covid_n5_week.rds"))

# n = 4
wbe_covid_n4_week <- left_join(wbe_n4_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n4_week,
        here("data/processed_data/wbe_covid_n4_week.rds"))

# n = 3
wbe_covid_n3_week <- left_join(wbe_n3_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n3_week,
        here("data/processed_data/wbe_covid_n3_week.rds"))

# n = 2
wbe_covid_n2_week <- left_join(wbe_n2_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n2_week,
        here("data/processed_data/wbe_covid_n2_week.rds"))

# n = 1
wbe_covid_n1_week <- left_join(wbe_n1_week, covid_weekly, by = "week") %>% drop_na(week)

saveRDS(wbe_covid_n1_week,
        here("data/processed_data/wbe_covid_n1_week.rds"))
```
